{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/lists\", a1];\n};\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 11)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const list_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r2._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r2.title);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"completed\": a0\n  };\n};\nfunction TaskViewComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_12_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const task_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onTaskClick(task_r3));\n    });\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, task_r3.completed));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.title);\n  }\n}\nexport class TaskViewComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      console.log(params);\n      this.taskService.getTasks(params['listId']).subscribe(tasks => {\n        console.log(tasks);\n        this.tasks = tasks;\n      });\n    });\n    this.taskService.getLists().subscribe(lists => {\n      this.lists = lists;\n    });\n  }\n  onTaskClick(task) {\n    // we wanna set task to completed\n    this.taskService.complete(task).subscribe(() => {\n      console.log(\"Completed successfully\");\n      //task set to completed successfully\n      task.completed = !task.completed;\n    });\n  }\n}\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [\"class\", \"task\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"./new-task\", 1, \"circle-add-button\", \"button\", \"is-primary\"], [\"src\", \"../../../assets/plus-icon.svg\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [1, \"task\", 3, \"ngClass\", \"click\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"+ New List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"h1\", 3);\n      i0.ɵɵtext(11, \" Tasks \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, TaskViewComponent_div_12_Template, 3, 4, \"div\", 8);\n      i0.ɵɵelementStart(13, \"button\", 9);\n      i0.ɵɵelement(14, \"img\", 10);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"@import url(https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700);html[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right top, #44ddd0, #09bcf2);\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.centered-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 24px;\\n  text-transform: uppercase;\\n  letter-spacing: 2px;\\n}\\n\\n.white-box[_ngcontent-%COMP%] {\\n  padding: 35px;\\n  background: white;\\n  border-radius: 5px;\\n  width: 350px;\\n  max-width: 350px;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.task-manager-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 1000px;\\n  max-height: 680px;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n  background: white;\\n  padding: 42px;\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n\\n.task-list-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  padding: 42px;\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  display: flex;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n  margin: 0;\\n}\\n\\n.list-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 15px;\\n  flex-grow: 1;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  width: 100%;\\n  color: #5f5f5f;\\n  margin-bottom: 5px;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover {\\n  background: #f8f8f8;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%] {\\n  background-color: #cff8ef;\\n  color: rgb(0, 100, 80);\\n}\\n\\n.task[_ngcontent-%COMP%] {\\n  display: flex;\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  align-items: center;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete) {\\n  cursor: pointer;\\n  transition: box-shadow 0.2s ease, transform 0.2s ease;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):active {\\n  transform: scale(0.95);\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover {\\n  box-shadow: 0 0 0 5px #eeeeee;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover   .task-buttons[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  transform: scale(1);\\n}\\n.task.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task.completed[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-grow: 1;\\n}\\n.task[_ngcontent-%COMP%]   .task-buttons[_ngcontent-%COMP%] {\\n  transition: opacity 0.2s, transform 0.2s;\\n  opacity: 0;\\n  transform: scale(0.85);\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAUUA,6BAAqH;IAClHA,YAAgB;IAAAA,iBAAI;;;;IAD8BA,oEAAkC;IACpFA,eAAgB;IAAhBA,mCAAgB;;;;;;;;;;;IAcrBA,+BAAwH;IAA3EA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAC5DA,yBAAG;IAAAA,YAAgB;IAAAA,iBAAI;;;;IADsCA,uEAA8C;IACxGA,eAAgB;IAAhBA,mCAAgB;;;ACdvC,OAAM,MAAOC,iBAAiB;EAK9BC,YAAoBC,WAAwB,EAAUC,KAAqB,EAAUC,MAAc;IAA/E,gBAAW,GAAXF,WAAW;IAAuB,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;EAAY;EAEvGC,QAAQ;IACJ,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CACxBD,MAAc,IAAI;MACnBE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MAChB,IAAI,CAACJ,WAAW,CAACQ,QAAQ,CAACJ,MAAM,CAAC,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAEI,KAAU,IAAI;QACpEH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;QACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;MACP,CAAC,CAAC;IACN,CAAC,CACV;IACH,IAAI,CAACT,WAAW,CAACU,QAAQ,EAAE,CAACL,SAAS,CAAEM,KAAU,IAAI;MACnD,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAC,WAAW,CAACC,IAAU;IACpB;IACA,IAAI,CAACb,WAAW,CAACc,QAAQ,CAACD,IAAI,CAAC,CAACR,SAAS,CAAC,MAAK;MAC7CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC;MACAM,IAAI,CAACE,SAAS,GAAG,CAACF,IAAI,CAACE,SAAS;IAClC,CAAC,CAAC;EACJ;;AA7BWjB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ9BvB,8BAA8B;MAKtBA,uBACF;MAAAA,iBAAK;MAELA,8BAAuB;MAEnBA,8DAEE;MAENA,iBAAM;MAELA,iCAAwE;MAAAA,0BAAU;MAAAA,iBAAS;MAIhGA,8BAAsD;MAEhDA,wBACF;MAAAA,iBAAK;MAEHA,oEAEQ;MAENA,kCAA4E;MAC1EA,2BAA0C;MAC5CA,iBAAS;;;MArBkCA,eAAQ;MAARA,mCAAQ;MAelBA,eAAQ;MAARA,mCAAQ","names":["i0","TaskViewComponent","constructor","taskService","route","router","ngOnInit","params","subscribe","console","log","getTasks","tasks","getLists","lists","onTaskClick","task","complete","completed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\srh\\SAD\\Project\\Task2\\sad-01-2023-project-team_1\\frontend\\src\\app\\pages\\task-view\\task-view.component.html","E:\\srh\\SAD\\Project\\Task2\\sad-01-2023-project-team_1\\frontend\\src\\app\\pages\\task-view\\task-view.component.ts"],"sourcesContent":["<div class=\"centered-content\">\r\n <div class=\"task-manager-container\">\r\n\r\n  <div class=\"sidebar  has-background-white\">\r\n   <h1 class=\"title has-text-primary\">\r\n        Lists\r\n      </h1>\r\n   \r\n      <div class=\"list-menu\">\r\n       \r\n          <a class=\"list-menu-item\" *ngFor=\"let list of lists\" [routerLink]=\"['/lists',list._id]\" routerLinkActive=\"is-active\">\r\n          <p>{{ list.title }}</p>\r\n        </a>\r\n\r\n      </div>\r\n\r\n       <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">+ New List</button>\r\n\r\n  </div>\r\n\r\n  <div class=\"task-list-container has-background-light\">\r\n  <h1 class=\"title has-text-primary\">\r\n        Tasks\r\n      </h1>\r\n      <!-- Task Elements -->\r\n        <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass] = \"{ 'completed' : task.completed }\">\r\n                    <p>{{ task.title }}</p>\r\n          </div>\r\n\r\n          <button routerLink=\"./new-task\" class=\"circle-add-button button is-primary\">\r\n            <img  src=\"../../../assets/plus-icon.svg\">\r\n          </button>\r\n  </div>\r\n\r\n </div>\r\n","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Task } from 'src/app/models/task.model';\r\nimport { List } from 'src/app/models/list.model';\r\n\r\n@Component({\r\n  selector: 'app-task-view',\r\n  templateUrl: './task-view.component.html',\r\n  styleUrls: ['./task-view.component.scss']\r\n})\r\nexport class TaskViewComponent implements OnInit {\r\n\r\nlists: any;\r\ntasks: any;\r\n\r\nconstructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\r\n\r\nngOnInit() {\r\n    this.route.params.subscribe(\r\n      (params: Params) => {\r\n      console.log(params);\r\n         this.taskService.getTasks(params['listId']).subscribe((tasks: any) => {\r\n          console.log(tasks);\r\n         this.tasks = tasks;\r\n                    })\r\n                }\r\n      )\r\n    this.taskService.getLists().subscribe((lists: any) => {\r\n      this.lists = lists;\r\n    })\r\n  }\r\n    \r\n  onTaskClick(task: Task) {\r\n    // we wanna set task to completed\r\n    this.taskService.complete(task).subscribe(() => {\r\n      console.log(\"Completed successfully\");\r\n      //task set to completed successfully\r\n      task.completed = !task.completed;\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}