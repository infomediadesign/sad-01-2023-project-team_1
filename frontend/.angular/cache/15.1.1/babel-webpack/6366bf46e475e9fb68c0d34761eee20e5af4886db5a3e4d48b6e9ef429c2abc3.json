{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/lists\", a1];\n};\nfunction TaskViewComponent_a_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const list_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r3._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r3.title);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"completed\": a0\n  };\n};\nconst _c2 = function (a1, a3) {\n  return [\"/lists\", a1, \"edit-task\", a3];\n};\nfunction TaskViewComponent_div_12_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_12_div_15_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const task_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onTaskClick(task_r6));\n    });\n    i0.ɵɵelementStart(1, \"div\", 25)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 26)(5, \"button\", 27)(6, \"div\", 28);\n    i0.ɵɵelement(7, \"i\", 29);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_12_div_15_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const task_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.onDeleteTaskClick(task_r6._id));\n    });\n    i0.ɵɵelementStart(9, \"div\", 28);\n    i0.ɵɵelement(10, \"i\", 31);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r6 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, task_r6.completed));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r6.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction2(5, _c2, ctx_r4.selectedListId, task_r6._id));\n  }\n}\nfunction TaskViewComponent_div_12_h3_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 32);\n    i0.ɵɵtext(1, \"There are no tasks here! Click the add button to create a new task.\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = function (a1) {\n  return [\"/edit-list\", a1];\n};\nfunction TaskViewComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 10)(2, \"h1\", 3);\n    i0.ɵɵtext(3, \" Tasks \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11)(5, \"div\", 12)(6, \"button\", 13)(7, \"span\", 14);\n    i0.ɵɵelement(8, \"i\", 15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 16)(10, \"div\", 17)(11, \"a\", 18);\n    i0.ɵɵtext(12, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_12_Template_a_click_13_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onDeleteListClick());\n    });\n    i0.ɵɵtext(14, \" Delete \");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵtemplate(15, TaskViewComponent_div_12_div_15_Template, 11, 8, \"div\", 20);\n    i0.ɵɵtemplate(16, TaskViewComponent_div_12_h3_16_Template, 2, 0, \"h3\", 21);\n    i0.ɵɵelementStart(17, \"button\", 22);\n    i0.ɵɵelement(18, \"img\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c3, ctx_r1.selectedListId));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.tasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tasks.length === 0);\n  }\n}\nfunction TaskViewComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 32);\n    i0.ɵɵtext(2, \"Please select a list from the sidebar\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TaskViewComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['listId']) {\n        this.selectedListId = params['listId'];\n        this.taskService.getTasks(params['listId']).subscribe(tasks => {\n          this.tasks = tasks;\n        });\n      } else {\n        this.tasks = undefined;\n      }\n    });\n    this.taskService.getLists().subscribe(lists => {\n      this.lists = lists;\n    });\n  }\n  onTaskClick(task) {\n    // we want to set the task to completed\n    this.taskService.complete(task).subscribe(() => {\n      // the task has been set to completed successfully\n      console.log(\"Completed successully!\");\n      task.completed = !task.completed;\n    });\n  }\n  onDeleteListClick() {\n    this.taskService.deleteList(this.selectedListId).subscribe(res => {\n      this.router.navigate(['/lists']);\n      console.log(res);\n    });\n  }\n  onDeleteTaskClick(id) {\n    this.taskService.deleteTask(this.selectedListId, id).subscribe(res => {\n      this.tasks = this.tasks.filter(val => val._id !== id);\n      console.log(res);\n    });\n  }\n}\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [4, \"ngIf\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [1, \"top-bar\"], [1, \"dropdown\", \"is-hoverable\", \"is-right\"], [1, \"dropdown-trigger\"], [\"aria-haspopup\", \"true\", \"aria-controls\", \"dropdown-menu4\", 1, \"button\"], [1, \"icon\", \"is-small\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-cog\"], [\"id\", \"dropdown-menu4\", \"role\", \"menu\", 1, \"dropdown-menu\"], [1, \"dropdown-content\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"dropdown-item\", \"has-text-danger\", 3, \"click\"], [\"class\", \"task\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"empty-state-text\", 4, \"ngIf\"], [\"routerLink\", \"./new-task\", 1, \"circle-add-button\", \"button\", \"is-primary\"], [\"src\", \"../../../assets/plus-icon.svg\", 1, \"has-text-white\"], [1, \"task\", 3, \"ngClass\", \"click\"], [1, \"task-text\"], [1, \"task-buttons\"], [1, \"button\", 3, \"routerLink\"], [1, \"icon\"], [1, \"fas\", \"fa-edit\"], [1, \"button\", \"is-danger\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"empty-state-text\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n      i0.ɵɵtext(2, \" Logout \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"h1\", 3);\n      i0.ɵɵtext(6, \" Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵtemplate(8, TaskViewComponent_a_8_Template, 3, 4, \"a\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \"+ New List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 7);\n      i0.ɵɵtemplate(12, TaskViewComponent_div_12_Template, 19, 5, \"div\", 8);\n      i0.ɵɵtemplate(13, TaskViewComponent_div_13_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"@import url(https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700);html[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right top, #44ddd0, #09bcf2);\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.centered-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 24px;\\n  text-transform: uppercase;\\n  letter-spacing: 2px;\\n}\\n\\n.white-box[_ngcontent-%COMP%] {\\n  padding: 35px;\\n  background: white;\\n  border-radius: 5px;\\n  width: 350px;\\n  max-width: 350px;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.signup-msg[_ngcontent-%COMP%] {\\n  text-align: left;\\n  padding-left: 15px;\\n  padding-top: 7px;\\n  color: red;\\n}\\n\\n.task-manager-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 1000px;\\n  max-height: 680px;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n  background: white;\\n  padding: 42px;\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n\\n.task-list-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  padding: 42px;\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  display: flex;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n  margin: 0;\\n}\\n\\n.list-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 15px;\\n  flex-grow: 1;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  width: 100%;\\n  color: #5f5f5f;\\n  margin-bottom: 5px;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover {\\n  background: #f8f8f8;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%] {\\n  background-color: #cff8ef;\\n  color: rgb(0, 100, 80);\\n}\\n\\n.task[_ngcontent-%COMP%] {\\n  display: flex;\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  align-items: center;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete) {\\n  cursor: pointer;\\n  transition: box-shadow 0.2s ease, transform 0.2s ease;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):active {\\n  transform: scale(0.95);\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover {\\n  box-shadow: 0 0 0 5px #eeeeee;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover   .task-buttons[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  transform: scale(1);\\n}\\n.task.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task.completed[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-grow: 1;\\n}\\n.task[_ngcontent-%COMP%]   .task-buttons[_ngcontent-%COMP%] {\\n  transition: opacity 0.2s, transform 0.2s;\\n  opacity: 0;\\n  transform: scale(0.85);\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluLXN0eWxlcy5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9wYWdlcy90YXNrLXZpZXcvdGFzay12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCQTtFQUNJLDJEQUFBO0FDM0JKOztBRDhCQTtFQUNJLFlBQUE7QUMzQko7O0FEOEJBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQzNCSjs7QUQ4QkE7RUFDSSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FDM0JKOztBRDhCQTtFQUNJLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0VBQ0EsbUJBQUE7QUMzQko7O0FEOEJBO0VBQ0ksYUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFFQSxZQUFBO0VBQ0EsZ0JBQUE7QUM1Qko7O0FEK0JBO0VBQ0ksaUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtBQzVCSjs7QUQrQkE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxVQUFBO0FDNUJKOztBQXJEQTtFQUNJLGFBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7QUF3REo7O0FBckRBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBRUEsWUFBQTtFQUNBLGlCQUFBO0VBRUEsYUFBQTtFQUVBLDJCQUFBO0VBQ0EsOEJBQUE7QUFxREo7O0FBbERBO0VBQ0ksa0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUVBLDRCQUFBO0VBQ0EsK0JBQUE7QUFvREo7QUFqREk7RUFDSSxtQkFBQTtFQUNBLGFBQUE7QUFtRFI7QUFsRFE7RUFDSSxZQUFBO0VBQ0EsU0FBQTtBQW9EWjs7QUE5Q0E7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7QUFpREo7QUEvQ0k7RUFDSSxhQUFBO0VBRUEsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBRUEsV0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQStDUjtBQTdDUTtFQUNJLG1CRHJESjtBQ29HUjtBQTVDUTtFQUNJLHlCQUFBO0VBQ0Esc0JENURDO0FDMEdiOztBQXpDQTtFQUNJLGFBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUVBLG1CQUFBO0FBMkNKO0FBekNJO0VBQ0ksZUFBQTtFQUNBLHFEQUFBO0FBMkNSO0FBekNRO0VBQ0ksc0JBQUE7QUEyQ1o7QUF4Q1E7RUFDSSw2QkFBQTtBQTBDWjtBQXhDWTtFQUNJLFVBQUE7RUFDQSxtQkFBQTtBQTBDaEI7QUFyQ0k7RUFDSSw2QkFBQTtFQUNBLFlBQUE7QUF1Q1I7QUFwQ0k7RUFDSSw2QkFBQTtFQUNBLFlBQUE7QUFzQ1I7QUFsQ0k7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQW9DUjtBQWpDSTtFQUNJLHdDQUFBO0VBQ0EsVUFBQTtFQUNBLHNCQUFBO0FBbUNSOztBQS9CQTtFQUNJLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBa0NKOztBQTlCQTtFQUNJLGVBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUFpQ0o7O0FBOUJBO0VBQ0ksa0JBQUE7RUFDRCxZQUFBO0VBQ0EsV0FBQTtFQUNDLFlBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUFpQ0o7O0FBN0JBO0VBQ0ksZUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQWdDSiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaXMgd2hlcmUgd2UgcHV0IGdsb2JhbCBzdHlsZXMgYW5kIGNoYW5nZSB2YXJpYWJsZSB2YWx1ZXNcblxuLy8gSW1wb3J0IEZvbnRzIChMYXRvIGFuZCBOdW5pdG8pXG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86NDAwLDcwMHxOdW5pdG86NDAwLDcwMCcpO1xuXG4kdHVycXVvaXNlOiAjNDRkZGQwO1xuJGdyZWVuOiAjMDliY2YyO1xuJGxpZ2h0LWdyZWVuOiAjNDVmNjllOyBcbiRkYXJrLWdyZWVuOiByZ2IoMCwgMTAwLCA4MCk7XG5cbiRsaWdodDogI2Y4ZjhmODtcblxuXG4vLyBVcGRhdGUgQnVsbWEncyBnbG9iYWwgdmFyaWFibGVzXG4kZmFtaWx5LXNhbnMtc2VyaWY6IFwiTnVuaXRvXCIsIHNhbnMtc2VyaWY7XG4kcHJpbWFyeTogJGdyZWVuO1xuXG4kbGluazogJHR1cnF1b2lzZTtcblxuXG4vLyBVcGRhdGUgc29tZSBvZiBCdWxtYSdzIGNvbXBvbmVudCB2YXJpYWJsZXNcblxuJGNvbnRyb2wtYm9yZGVyLXdpZHRoOiAycHg7XG4kaW5wdXQtYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiRpbnB1dC1zaGFkb3c6IG5vbmU7XG5cblxuLy8gU2V0IGN1c3RvbSBnbG9iYWwgc3R5bGVzICh3aWxsIGJlIGFwcGxpZWQgdG8gd2hvbGUgYXBwKVxuXG5odG1sIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgdG9wLCAkdHVycXVvaXNlLCAkZ3JlZW4pO1xufVxuXG5odG1sLCBib2R5IHtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5jZW50ZXJlZC1jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ubW9kYWwtYm94IHtcbiAgICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDU4MHB4O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBwYWRkaW5nOiAzNXB4O1xufVxuXG4udGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiAnTGF0byc7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbn1cblxuLndoaXRlLWJveCB7XG4gICAgcGFkZGluZzogMzVweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG5cbiAgICB3aWR0aDogMzUwcHg7XG4gICAgbWF4LXdpZHRoOiAzNTBweDtcbiAgICBcbn1cbi5tb2RhbC1ib3h7XG4gICAgbWluLWhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA1ODBweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogMzVweDtcbn1cblxuLnNpZ251cC1tc2cge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctdG9wOiA3cHg7XG4gICAgY29sb3I6IHJlZDtcbn0iLCJAaW1wb3J0ICcuLi8uLi8uLi9tYWluLXN0eWxlcy5zY3NzJztcblxuLnRhc2stbWFuYWdlci1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwMHB4O1xuICAgIG1heC1oZWlnaHQ6IDY4MHB4O1xufVxuXG4uc2lkZWJhciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgcGFkZGluZzogNDJweDtcblxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDhweDtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA4cHg7XG59XG5cbi50YXNrLWxpc3QtY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBwYWRkaW5nOiA0MnB4O1xuXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDhweDtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogOHB4O1xuXG5cbiAgICAudG9wLWJhciB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuLmxpc3QtbWVudSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbi10b3A6IDE1cHg7XG4gICAgZmxleC1ncm93OiAxOyBcblxuICAgIC5saXN0LW1lbnUtaXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZzogMTBweCAxNXB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG5cbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGNvbG9yOiAjNWY1ZjVmO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkbGlnaHQ7XG4gICAgICAgIH1cblxuICAgICAgICAmLmlzLWFjdGl2ZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZmOGVmO1xuICAgICAgICAgICAgY29sb3I6ICRkYXJrLWdyZWVuO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4udGFzayB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG5cbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIFxuICAgICY6bm90KC5jb21wbGV0ZSkge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4ycyBlYXNlLCB0cmFuc2Zvcm0gMC4ycyBlYXNlO1xuICAgIFxuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDVweCAjZWVlZWVlO1xuXG4gICAgICAgICAgICAudGFzay1idXR0b25zIHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLmNvbXBsZXRlZCB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xuICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgfVxuXG4gICAgJi5jb21wbGV0ZWQgLnRhc2stdGV4dCB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xuICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgfVxuXG5cbiAgICAudGFzay10ZXh0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1ncm93OiAxO1xuICAgIH1cblxuICAgIC50YXNrLWJ1dHRvbnMge1xuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMsIHRyYW5zZm9ybSAwLjJzO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuODUpO1xuICAgIH1cbn1cblxuLmNpcmNsZS1hZGQtYnV0dG9uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAzNXB4O1xuICAgIHJpZ2h0OiAzNXB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICB3aWR0aDogNTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgXG59XG5cbi5lbXB0eS1zdGF0ZS10ZXh0IHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgY29sb3I6ICM3Nzc7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2lyY2xlLWFkZC1idXR0b257XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgYm90dG9tOiAzNXB4O1xuICAgcmlnaHQ6IDM1cHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcblxufVxuXG4uZW1wdHktc3RhdGUtdGV4dHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgY29sb3I6ICM3Nzc7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TaskViewComponent","constructor","taskService","route","router","ngOnInit","params","subscribe","selectedListId","getTasks","tasks","undefined","getLists","lists","onTaskClick","task","complete","console","log","completed","onDeleteListClick","deleteList","res","navigate","onDeleteTaskClick","id","deleteTask","filter","val","_id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/suryaslash/Documents/GitHub/sad-01-2023-project-team_1/frontend/src/app/pages/task-view/task-view.component.html","/Users/suryaslash/Documents/GitHub/sad-01-2023-project-team_1/frontend/src/app/pages/task-view/task-view.component.ts"],"sourcesContent":["<div class=\"centered-content\">\n  <div>\n    Logout\n  </div>\n  <div class=\"task-manager-container\">\n\n    <div class=\"sidebar has-background-white\">\n      <h1 class=\"title has-text-primary\">\n        Lists\n      </h1>\n\n      <div class=\"list-menu\">\n        <a class=\"list-menu-item\" *ngFor=\"let list of lists\" [routerLink]=\"['/lists', list._id]\" routerLinkActive=\"is-active\">\n          <p>{{ list.title }}</p>\n        </a>\n\n      </div>\n\n      <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">+ New List</button>\n\n    </div>\n\n    <div class=\"task-list-container has-background-light\">\n      <div *ngIf=\"tasks\">\n        <div class=\"top-bar\">\n          <h1 class=\"title has-text-primary\">\n            Tasks\n          </h1>\n          <div class=\"dropdown is-hoverable is-right\">\n            <div class=\"dropdown-trigger\">\n              <button class=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu4\">\n                <span class=\"icon is-small\">\n                  <i class=\"fas fa-cog\" aria-hidden=\"true\"></i>\n                </span>\n              </button>\n            </div>\n            <div class=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\n              <div class=\"dropdown-content\">\n                <a [routerLink]=\"['/edit-list', selectedListId]\" class=\"dropdown-item\">\n                  Edit\n                </a>\n                <a (click)=\"onDeleteListClick()\" class=\"dropdown-item has-text-danger\">\n                  Delete\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Task Elements -->\n        <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass]=\"{ 'completed': task.completed }\">\n          <div class=\"task-text\">\n            <p>{{ task.title }}</p>\n          </div>\n          <div class=\"task-buttons\">\n\n            <button class=\"button\" [routerLink]=\"['/lists', selectedListId, 'edit-task', task._id]\">\n              <div class=\"icon\">\n                <i class=\"fas fa-edit\"></i>\n              </div>\n            </button>\n\n            <button class=\"button is-danger\" (click)=\"onDeleteTaskClick(task._id)\" style=\"margin-left: 10px;\">\n              <div class=\"icon\">\n                <i class=\"fas fa-trash\"></i>\n              </div>\n            </button>\n\n          </div>\n        </div>\n\n        <h3 class=\"empty-state-text\" *ngIf=\"tasks.length === 0\">There are no tasks here! Click the add button to create\n          a new task.</h3>\n\n        <button routerLink=\"./new-task\" class=\"circle-add-button button is-primary\">\n          <img src=\"../../../assets/plus-icon.svg\" class=\"has-text-white\">\n        </button>\n      </div>\n\n      <div *ngIf=\"!tasks\">\n        <h3 class=\"empty-state-text\">Please select a list from the sidebar</h3>\n      </div>\n\n    </div>\n\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { List } from 'src/app/models/list.model';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\n\nlists: any;\ntasks: any;\n\n selectedListId: string;\n\nconstructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\n\nngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        if (params['listId']){\n         this.selectedListId = params['listId'];\n              this.taskService.getTasks(params['listId']).subscribe((tasks: any) => {\n         this.tasks = tasks;\n                    })\n                }\n                else{\n                  this.tasks = undefined;\n                }\n              }\n      )\n    this.taskService.getLists().subscribe((lists: any) => {\n      this.lists = lists;\n    })\n  }\n    \n   onTaskClick(task: Task) {\n    // we want to set the task to completed\n    this.taskService.complete(task).subscribe(() => {\n      // the task has been set to completed successfully\n      console.log(\"Completed successully!\");\n      task.completed = !task.completed;\n    })\n  }\n\n  onDeleteListClick() {\n    this.taskService.deleteList(this.selectedListId).subscribe((res: any) => {\n      this.router.navigate(['/lists']);\n      console.log(res);\n    })\n  }\n\n  onDeleteTaskClick(id: string) {\n    this.taskService.deleteTask(this.selectedListId, id).subscribe((res: any) => {\n      this.tasks = this.tasks.filter(val => val._id !== id);\n      console.log(res);\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}