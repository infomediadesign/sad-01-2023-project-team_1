{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nexport class TaskViewComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n  }\n  ngOnInit() {}\n  createNewList() {\n    thi.taskService.createList;\n    {\n      'testing';\n    }\n    subscribe(response => {\n      console.log(response);\n    });\n  }\n}\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n};\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 29,\n  vars: 0,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [1, \"list-menu-item\", \"is-active\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [1, \"task\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"a\", 5)(7, \"p\");\n      i0.ɵɵtext(8, \"List #1\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"a\", 5)(10, \"p\");\n      i0.ɵɵtext(11, \"List #2\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"a\", 5)(13, \"p\");\n      i0.ɵɵtext(14, \"List #3\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"button\", 6);\n      i0.ɵɵtext(16, \"+ New List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"h1\", 3);\n      i0.ɵɵtext(19, \" Tasks \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 8)(21, \"p\");\n      i0.ɵɵtext(22, \" This is something I have to do \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 8)(24, \"p\");\n      i0.ɵɵtext(25, \" This is something I have to do \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 8)(27, \"p\");\n      i0.ɵɵtext(28, \" This is something I have to do \");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  dependencies: [i2.RouterLink],\n  styles: [\"@import url(https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700);html[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right top, #44ddd0, #27d7a1);\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.centered-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 24px;\\n  text-transform: uppercase;\\n  letter-spacing: 2px;\\n}\\n\\n.white-box[_ngcontent-%COMP%] {\\n  padding: 35px;\\n  background: white;\\n  border-radius: 5px;\\n  width: 350px;\\n  max-width: 350px;\\n}\\n\\n.task-manager-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 1000px;\\n  max-height: 680px;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n  background: white;\\n  padding: 42px;\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n\\n.task-list-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  padding: 42px;\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  display: flex;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n  margin: 0;\\n}\\n\\n.list-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 15px;\\n  flex-grow: 1;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  width: 100%;\\n  color: #5f5f5f;\\n  margin-bottom: 5px;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover {\\n  background: #f8f8f8;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%] {\\n  background-color: #cff8ef;\\n  color: rgb(0, 100, 80);\\n}\\n\\n.task[_ngcontent-%COMP%] {\\n  display: flex;\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  align-items: center;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete) {\\n  cursor: pointer;\\n  transition: box-shadow 0.2s ease, transform 0.2s ease;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):active {\\n  transform: scale(0.95);\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover {\\n  box-shadow: 0 0 0 5px #eeeeee;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover   .task-buttons[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  transform: scale(1);\\n}\\n.task.completed[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-grow: 1;\\n}\\n.task[_ngcontent-%COMP%]   .task-buttons[_ngcontent-%COMP%] {\\n  transition: opacity 0.2s, transform 0.2s;\\n  opacity: 0;\\n  transform: scale(0.85);\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluLXN0eWxlcy5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9wYWdlcy90YXNrLXZpZXcvdGFzay12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCQTtFQUNJLDJEQUFBO0FDM0JKOztBRDhCQTtFQUNJLFlBQUE7QUMzQko7O0FEOEJBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQzNCSjs7QUQ4QkE7RUFDSSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FDM0JKOztBRDhCQTtFQUNJLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0VBQ0EsbUJBQUE7QUMzQko7O0FEOEJBO0VBQ0ksYUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFFQSxZQUFBO0VBQ0EsZ0JBQUE7QUM1Qko7O0FBckNBO0VBQ0ksYUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQXdDSjs7QUFyQ0E7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFFQSxZQUFBO0VBQ0EsaUJBQUE7RUFFQSxhQUFBO0VBRUEsMkJBQUE7RUFDQSw4QkFBQTtBQXFDSjs7QUFsQ0E7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBRUEsNEJBQUE7RUFDQSwrQkFBQTtBQW9DSjtBQWpDSTtFQUNJLG1CQUFBO0VBQ0EsYUFBQTtBQW1DUjtBQWxDUTtFQUNJLFlBQUE7RUFDQSxTQUFBO0FBb0NaOztBQTlCQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtBQWlDSjtBQS9CSTtFQUNJLGFBQUE7RUFFQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFFQSxXQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0FBK0JSO0FBN0JRO0VBQ0ksbUJEckRKO0FDb0ZSO0FBNUJRO0VBQ0kseUJBQUE7RUFDQSxzQkQ1REM7QUMwRmI7O0FBekJBO0VBQ0ksYUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBRUEsbUJBQUE7QUEyQko7QUF6Qkk7RUFDSSxlQUFBO0VBQ0EscURBQUE7QUEyQlI7QUF6QlE7RUFDSSxzQkFBQTtBQTJCWjtBQXhCUTtFQUNJLDZCQUFBO0FBMEJaO0FBeEJZO0VBQ0ksVUFBQTtFQUNBLG1CQUFBO0FBMEJoQjtBQXJCSTtFQUNJLDZCQUFBO0VBQ0EsWUFBQTtBQXVCUjtBQW5CSTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBcUJSO0FBbEJJO0VBQ0ksd0NBQUE7RUFDQSxVQUFBO0VBQ0Esc0JBQUE7QUFvQlI7O0FBaEJBO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUFtQko7O0FBZkE7RUFDSSxlQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBa0JKIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBpcyB3aGVyZSB3ZSBwdXQgZ2xvYmFsIHN0eWxlcyBhbmQgY2hhbmdlIHZhcmlhYmxlIHZhbHVlc1xyXG5cclxuLy8gSW1wb3J0IEZvbnRzIChMYXRvIGFuZCBOdW5pdG8pXHJcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TGF0bzo0MDAsNzAwfE51bml0bzo0MDAsNzAwJyk7XHJcblxyXG4kdHVycXVvaXNlOiAjNDRkZGQwO1xyXG4kZ3JlZW46ICMyN2Q3YTE7XHJcbiRsaWdodC1ncmVlbjogIzQ1ZjY5ZTsgXHJcbiRkYXJrLWdyZWVuOiByZ2IoMCwgMTAwLCA4MCk7XHJcblxyXG4kbGlnaHQ6ICNmOGY4Zjg7XHJcblxyXG5cclxuLy8gVXBkYXRlIEJ1bG1hJ3MgZ2xvYmFsIHZhcmlhYmxlc1xyXG4kZmFtaWx5LXNhbnMtc2VyaWY6IFwiTnVuaXRvXCIsIHNhbnMtc2VyaWY7XHJcbiRwcmltYXJ5OiAkZ3JlZW47XHJcblxyXG4kbGluazogJHR1cnF1b2lzZTtcclxuXHJcblxyXG4vLyBVcGRhdGUgc29tZSBvZiBCdWxtYSdzIGNvbXBvbmVudCB2YXJpYWJsZXNcclxuXHJcbiRjb250cm9sLWJvcmRlci13aWR0aDogMnB4O1xyXG4kaW5wdXQtYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuJGlucHV0LXNoYWRvdzogbm9uZTtcclxuXHJcblxyXG4vLyBTZXQgY3VzdG9tIGdsb2JhbCBzdHlsZXMgKHdpbGwgYmUgYXBwbGllZCB0byB3aG9sZSBhcHApXHJcblxyXG5odG1sIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCB0b3AsICR0dXJxdW9pc2UsICRncmVlbik7XHJcbn1cclxuXHJcbmh0bWwsIGJvZHkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uY2VudGVyZWQtY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5tb2RhbC1ib3gge1xyXG4gICAgbWluLWhlaWdodDogMjAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC13aWR0aDogNTgwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IDM1cHg7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgICBmb250LWZhbWlseTogJ0xhdG8nO1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbn1cclxuXHJcbi53aGl0ZS1ib3gge1xyXG4gICAgcGFkZGluZzogMzVweDtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG5cclxuICAgIHdpZHRoOiAzNTBweDtcclxuICAgIG1heC13aWR0aDogMzUwcHg7XHJcbiAgICBcclxufVxyXG4iLCJAaW1wb3J0ICcuLi8uLi8uLi9tYWluLXN0eWxlcy5zY3NzJztcclxuXHJcbi50YXNrLW1hbmFnZXItY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1heC13aWR0aDogMTAwMHB4O1xyXG4gICAgbWF4LWhlaWdodDogNjgwcHg7XHJcbn1cclxuXHJcbi5zaWRlYmFyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgIHdpZHRoOiAyNTBweDtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG5cclxuICAgIHBhZGRpbmc6IDQycHg7XHJcblxyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogOHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogOHB4O1xyXG59XHJcblxyXG4udGFzay1saXN0LWNvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGZsZXgtZ3JvdzogMTtcclxuICAgIHBhZGRpbmc6IDQycHg7XHJcblxyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDhweDtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA4cHg7XHJcblxyXG5cclxuICAgIC50b3AtYmFyIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgLnRpdGxlIHtcclxuICAgICAgICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLmxpc3QtbWVudSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmbGV4LWdyb3c6IDE7IFxyXG5cclxuICAgIC5saXN0LW1lbnUtaXRlbSB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG5cclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBjb2xvcjogIzVmNWY1ZjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcblxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkbGlnaHQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLmlzLWFjdGl2ZSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjZmY4ZWY7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkZGFyay1ncmVlbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi50YXNrIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDE1cHggMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcblxyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIFxyXG4gICAgJjpub3QoLmNvbXBsZXRlKSB7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4ycyBlYXNlLCB0cmFuc2Zvcm0gMC4ycyBlYXNlO1xyXG4gICAgXHJcbiAgICAgICAgJjphY3RpdmUge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgNXB4ICNlZWVlZWU7XHJcblxyXG4gICAgICAgICAgICAudGFzay1idXR0b25zIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuY29tcGxldGVkIC50YXNrLXRleHQge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xyXG4gICAgICAgIG9wYWNpdHk6IDAuODtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLnRhc2stdGV4dCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICB9XHJcblxyXG4gICAgLnRhc2stYnV0dG9ucyB7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzLCB0cmFuc2Zvcm0gMC4ycztcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC44NSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jaXJjbGUtYWRkLWJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDM1cHg7XHJcbiAgICByaWdodDogMzVweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgXHJcbn1cclxuXHJcbi5lbXB0eS1zdGF0ZS10ZXh0IHtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGNvbG9yOiAjNzc3O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,iBAAiB;EAC9BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQ,IACR;EAEAC,aAAa;IACXC,GAAG,CAACH,WAAW,CAACI,UAAU;IAAA;MAAC,SAAS;;IAAEC,SAAS,CAAEC,QAAY,IAAI;MAC/DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ;;AAVaR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9BC,8BAA8B;MAKtBA,uBACF;MAAAA,iBAAK;MAELA,8BAAuB;MAEhBA,uBAAO;MAAAA,iBAAI;MAGfA,4BAAqC;MACjCA,wBAAO;MAAAA,iBAAI;MAGfA,6BAAsC;MAClCA,wBAAO;MAAAA,iBAAI;MAKjBA,kCAAwE;MAAAA,2BAAU;MAAAA,iBAAS;MAIhGA,+BAAwD;MAElDA,wBACF;MAAAA,iBAAK;MACLA,+BAAkB;MAClBA,iDAA+B;MAAAA,iBAAI;MAEvCA,+BAAkB;MACdA,iDAA+B;MAAAA,iBAAI;MAEvCA,+BAAkB;MACdA,iDAA+B;MAAAA,iBAAI","names":["TaskViewComponent","constructor","taskService","ngOnInit","createNewList","thi","createList","subscribe","response","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["E:\\srh\\SAD\\Project\\Tutorial\\task-manager\\frontend\\src\\app\\pages\\task-view\\task-view.component.ts","E:\\srh\\SAD\\Project\\Tutorial\\task-manager\\frontend\\src\\app\\pages\\task-view\\task-view.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\nconstructor(private taskService: TaskService) { }\n\nngOnInit() {\n}\n\ncreateNewList(){\n  thi.taskService.createList{'testing'}.subscribe((response:any) => {\r\n    console.log(response);\r\n  })\r\n}\n","<div class=\"centered-content\">\r\n <div class=\"task-manager-container\">\r\n\r\n  <div class=\"sidebar  has-background-white\">\r\n   <h1 class=\"title has-text-primary\">\r\n        Lists\r\n      </h1>\r\n   \r\n      <div class=\"list-menu\">\r\n        <a class=\"list-menu-item is-active\">\r\n          <p>List #1</p>\r\n           </a>\r\n\r\n         <a class=\"list-menu-item is-active\" >\r\n          <p>List #2</p>\r\n         </a>\r\n\r\n         <a class=\"list-menu-item  is-active\" >\r\n          <p>List #3</p>\r\n         </a>\r\n\r\n      </div>\r\n\r\n       <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">+ New List</button>\r\n\r\n  </div>\r\n\r\n  <div class=\"task-list-container   has-background-light\">\r\n  <h1 class=\"title has-text-primary\">\r\n        Tasks\r\n      </h1>\r\n      <div class=\"task\">\r\n  <p> This is something I have to do </p>\r\n  </div>\r\n  <div class=\"task\">\r\n  <p> This is something I have to do </p>\r\n  </div>\r\n  <div class=\"task\">\r\n  <p> This is something I have to do </p>\r\n  </div>\r\n\r\n </div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}