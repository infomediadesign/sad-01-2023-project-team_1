{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-request.service\";\nexport class AdminTaskService {\n  constructor(webReqService) {\n    this.webReqService = webReqService;\n  }\n  createList(userId, title) {\n    // We want to send a web request to create a list\n    return this.webReqService.post(`/admin/${userId}/lists`, {\n      title\n    });\n  }\n  createTask(userId, title, listId) {\n    // We want to send a web request to create a task\n    return this.webReqService.post(`/admin/${userId}/lists/${listId}/tasks`, {\n      title\n    });\n  }\n  getLists(userId) {\n    return this.webReqService.get(`/admin/${userId}/lists`);\n  }\n  getTasks(listId) {\n    return this.webReqService.get(`admin/lists/${listId}/tasks`);\n  }\n  updateList(userId, id, title) {\n    // We want to send a web request to update a list\n    return this.webReqService.patch(`admin/${userId}/lists/${id}`, {\n      title\n    });\n  }\n  updateTask(userId, listId, taskId, title) {\n    // We want to send a web request to update a list\n    return this.webReqService.patch(`admin/${userId}/lists/${listId}/tasks/${taskId}`, {\n      title\n    });\n  }\n  deleteTask(userId, listId, taskId) {\n    return this.webReqService.delete(`admin/${userId}/lists/${listId}/tasks/${taskId}`);\n  }\n  deleteList(userId, id) {\n    return this.webReqService.delete(`admin/${userId}/lists/${id}`);\n  }\n  complete(userId, task) {\n    return this.webReqService.patch(`admin/${userId}/lists/${task._listId}/tasks/${task._id}`, {\n      completed: !task.completed\n    });\n  }\n}\nAdminTaskService.ɵfac = function AdminTaskService_Factory(t) {\n  return new (t || AdminTaskService)(i0.ɵɵinject(i1.WebRequestService));\n};\nAdminTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminTaskService,\n  factory: AdminTaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,aAAgC;IAAhC,kBAAa,GAAbA,aAAa;EAAuB;EAEvDC,UAAU,CAACC,MAAc,EAAEC,KAAa;IACvC;IACA,OAAO,IAAI,CAACH,aAAa,CAACI,IAAI,CAAC,UAAUF,MAAM,QAAQ,EAAE;MAAEC;IAAK,CAAE,CAAC;EAErE;EACAE,UAAU,CAACH,MAAc,EAAEC,KAAa,EAAEG,MAAc;IACtD;IACA,OAAO,IAAI,CAACN,aAAa,CAACI,IAAI,CAAC,UAAUF,MAAM,UAAUI,MAAM,QAAQ,EAAE;MAAEH;IAAK,CAAE,CAAC;EACrF;EAEAI,QAAQ,CAACL,MAAc;IACrB,OAAO,IAAI,CAACF,aAAa,CAACQ,GAAG,CAAC,UAAUN,MAAM,QAAQ,CAAC;EACzD;EAEAO,QAAQ,CAACH,MAAc;IACpB,OAAO,IAAI,CAACN,aAAa,CAACQ,GAAG,CAAC,eAAeF,MAAM,QAAQ,CAAC;EAC/D;EAEAI,UAAU,CAACR,MAAc,EAAES,EAAU,EAAER,KAAa;IAClD;IACA,OAAO,IAAI,CAACH,aAAa,CAACY,KAAK,CAAC,SAASV,MAAM,UAAUS,EAAE,EAAE,EAAE;MAAER;IAAK,CAAE,CAAC;EAC3E;EAEAU,UAAU,CAACX,MAAc,EAAEI,MAAc,EAAEQ,MAAc,EAAEX,KAAa;IACtE;IACA,OAAO,IAAI,CAACH,aAAa,CAACY,KAAK,CAAC,SAASV,MAAM,UAAUI,MAAM,UAAUQ,MAAM,EAAE,EAAE;MAAEX;IAAK,CAAE,CAAC;EAC/F;EAEAY,UAAU,CAACb,MAAc,EAAEI,MAAc,EAAEQ,MAAc;IACvD,OAAO,IAAI,CAACd,aAAa,CAACgB,MAAM,CAAC,SAASd,MAAM,UAAUI,MAAM,UAAUQ,MAAM,EAAE,CAAC;EACrF;EAEAG,UAAU,CAACf,MAAc,EAAES,EAAU;IACnC,OAAO,IAAI,CAACX,aAAa,CAACgB,MAAM,CAAC,SAASd,MAAM,UAAUS,EAAE,EAAE,CAAC;EACjE;EAEAO,QAAQ,CAAChB,MAAc,EAAEiB,IAAU;IACjC,OAAO,IAAI,CAACnB,aAAa,CAACY,KAAK,CAAC,SAASV,MAAM,UAAUiB,IAAI,CAACC,OAAO,UAAUD,IAAI,CAACE,GAAG,EAAE,EAAE;MACzFC,SAAS,EAAE,CAACH,IAAI,CAACG;KAClB,CAAC;EACJ;;AA5CWxB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAyB,SAAhBzB,gBAAgB;EAAA0B,YAFf;AAAM","names":["AdminTaskService","constructor","webReqService","createList","userId","title","post","createTask","listId","getLists","get","getTasks","updateList","id","patch","updateTask","taskId","deleteTask","delete","deleteList","complete","task","_listId","_id","completed","factory","providedIn"],"sourceRoot":"","sources":["/Users/suryaslash/Documents/GitHub/sad-01-2023-project-team_1/frontend/src/app/admin-task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { WebRequestService } from './web-request.service';\nimport { Task } from 'src/app/models/task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminTaskService {\n\n  constructor(private webReqService: WebRequestService) { }\n\n   createList(userId: string, title: string) {\n    // We want to send a web request to create a list\n    return this.webReqService.post(`/admin/${userId}/lists`, { title });\n    \n  }\n  createTask(userId: string, title: string, listId: string) {\n    // We want to send a web request to create a task\n    return this.webReqService.post(`/admin/${userId}/lists/${listId}/tasks`, { title });\n  }\n\n  getLists(userId: string) {\n    return this.webReqService.get(`/admin/${userId}/lists`);\n  }\n\n  getTasks(listId: string) {\n     return this.webReqService.get(`admin/lists/${listId}/tasks`);\n  }\n\n  updateList(userId: string, id: string, title: string) {\n    // We want to send a web request to update a list\n    return this.webReqService.patch(`admin/${userId}/lists/${id}`, { title });\n  }\n\n  updateTask(userId: string, listId: string, taskId: string, title: string) {\n    // We want to send a web request to update a list\n    return this.webReqService.patch(`admin/${userId}/lists/${listId}/tasks/${taskId}`, { title });\n  }\n\n  deleteTask(userId: string, listId: string, taskId: string) {\n    return this.webReqService.delete(`admin/${userId}/lists/${listId}/tasks/${taskId}`);\n  }\n\n  deleteList(userId: string, id: string) {\n    return this.webReqService.delete(`admin/${userId}/lists/${id}`);\n  }\n\n  complete(userId: string, task: Task){\n    return this.webReqService.patch(`admin/${userId}/lists/${task._listId}/tasks/${task._id}`, {\n      completed: !task.completed\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}