{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/lists\", a1];\n};\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 11)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const list_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r2._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r2.title);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"completed\": a0\n  };\n};\nfunction TaskViewComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_12_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const task_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onTaskClick(task_r3));\n    });\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, task_r3.completed));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.title);\n  }\n}\nexport class TaskViewComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      console.log(params);\n      this.taskService.getTasks(params['listId']).subscribe(tasks => {\n        console.log(tasks);\n        this.tasks = tasks;\n      });\n    });\n    this.taskService.getLists().subscribe(lists => {\n      this.lists = lists;\n    });\n  }\n  onTaskClick(task) {\n    // we wanna set task to completed\n    this.taskService.complete(task).subscribe(() => {\n      console.log(\"Completed successfully\");\n      //task set to completed successfully\n      task.completed = !task.completed;\n    });\n  }\n}\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [\"class\", \"task\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"./new-task\", 1, \"circle-add-button\", \"button\", \"is-primary\"], [\"src\", \"../../../assets/plus-icon.svg\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [1, \"task\", 3, \"ngClass\", \"click\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"+ New List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"h1\", 3);\n      i0.ɵɵtext(11, \" Tasks \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, TaskViewComponent_div_12_Template, 3, 4, \"div\", 8);\n      i0.ɵɵelementStart(13, \"button\", 9);\n      i0.ɵɵelement(14, \"img\", 10);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"@import url(https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700);html[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right top, #44ddd0, #09bcf2);\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.centered-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 24px;\\n  text-transform: uppercase;\\n  letter-spacing: 2px;\\n}\\n\\n.white-box[_ngcontent-%COMP%] {\\n  padding: 35px;\\n  background: white;\\n  border-radius: 5px;\\n  width: 350px;\\n  max-width: 350px;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.task-manager-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 1000px;\\n  max-height: 680px;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n  background: white;\\n  padding: 42px;\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n\\n.task-list-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  padding: 42px;\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  display: flex;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n  margin: 0;\\n}\\n\\n.list-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 15px;\\n  flex-grow: 1;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  width: 100%;\\n  color: #5f5f5f;\\n  margin-bottom: 5px;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover {\\n  background: #f8f8f8;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%] {\\n  background-color: #cff8ef;\\n  color: rgb(0, 100, 80);\\n}\\n\\n.task[_ngcontent-%COMP%] {\\n  display: flex;\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  align-items: center;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete) {\\n  cursor: pointer;\\n  transition: box-shadow 0.2s ease, transform 0.2s ease;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):active {\\n  transform: scale(0.95);\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover {\\n  box-shadow: 0 0 0 5px #eeeeee;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover   .task-buttons[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  transform: scale(1);\\n}\\n.task.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task.completed[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-grow: 1;\\n}\\n.task[_ngcontent-%COMP%]   .task-buttons[_ngcontent-%COMP%] {\\n  transition: opacity 0.2s, transform 0.2s;\\n  opacity: 0;\\n  transform: scale(0.85);\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluLXN0eWxlcy5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9wYWdlcy90YXNrLXZpZXcvdGFzay12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCQTtFQUNJLDJEQUFBO0FDM0JKOztBRDhCQTtFQUNJLFlBQUE7QUMzQko7O0FEOEJBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQzNCSjs7QUQ4QkE7RUFDSSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FDM0JKOztBRDhCQTtFQUNJLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0VBQ0EsbUJBQUE7QUMzQko7O0FEOEJBO0VBQ0ksYUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFFQSxZQUFBO0VBQ0EsZ0JBQUE7QUM1Qko7O0FEK0JBO0VBQ0ksaUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtBQzVCSjs7QUE5Q0E7RUFDSSxhQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0FBaURKOztBQTlDQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUVBLFlBQUE7RUFDQSxpQkFBQTtFQUVBLGFBQUE7RUFFQSwyQkFBQTtFQUNBLDhCQUFBO0FBOENKOztBQTNDQTtFQUNJLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFFQSw0QkFBQTtFQUNBLCtCQUFBO0FBNkNKO0FBMUNJO0VBQ0ksbUJBQUE7RUFDQSxhQUFBO0FBNENSO0FBM0NRO0VBQ0ksWUFBQTtFQUNBLFNBQUE7QUE2Q1o7O0FBdkNBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FBMENKO0FBeENJO0VBQ0ksYUFBQTtFQUVBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUVBLFdBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7QUF3Q1I7QUF0Q1E7RUFDSSxtQkRyREo7QUM2RlI7QUFyQ1E7RUFDSSx5QkFBQTtFQUNBLHNCRDVEQztBQ21HYjs7QUFsQ0E7RUFDSSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFFQSxtQkFBQTtBQW9DSjtBQWxDSTtFQUNJLGVBQUE7RUFDQSxxREFBQTtBQW9DUjtBQWxDUTtFQUNJLHNCQUFBO0FBb0NaO0FBakNRO0VBQ0ksNkJBQUE7QUFtQ1o7QUFqQ1k7RUFDSSxVQUFBO0VBQ0EsbUJBQUE7QUFtQ2hCO0FBOUJJO0VBQ0ksNkJBQUE7RUFDQSxZQUFBO0FBZ0NSO0FBN0JJO0VBQ0ksNkJBQUE7RUFDQSxZQUFBO0FBK0JSO0FBM0JJO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUE2QlI7QUExQkk7RUFDSSx3Q0FBQTtFQUNBLFVBQUE7RUFDQSxzQkFBQTtBQTRCUjs7QUF4QkE7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQTJCSjs7QUF2QkE7RUFDSSxlQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBMEJKOztBQXZCQTtFQUNJLGtCQUFBO0VBQ0QsWUFBQTtFQUNBLFdBQUE7RUFDQyxZQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBMEJKIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBpcyB3aGVyZSB3ZSBwdXQgZ2xvYmFsIHN0eWxlcyBhbmQgY2hhbmdlIHZhcmlhYmxlIHZhbHVlc1xuXG4vLyBJbXBvcnQgRm9udHMgKExhdG8gYW5kIE51bml0bylcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TGF0bzo0MDAsNzAwfE51bml0bzo0MDAsNzAwJyk7XG5cbiR0dXJxdW9pc2U6ICM0NGRkZDA7XG4kZ3JlZW46ICMwOWJjZjI7XG4kbGlnaHQtZ3JlZW46ICM0NWY2OWU7IFxuJGRhcmstZ3JlZW46IHJnYigwLCAxMDAsIDgwKTtcblxuJGxpZ2h0OiAjZjhmOGY4O1xuXG5cbi8vIFVwZGF0ZSBCdWxtYSdzIGdsb2JhbCB2YXJpYWJsZXNcbiRmYW1pbHktc2Fucy1zZXJpZjogXCJOdW5pdG9cIiwgc2Fucy1zZXJpZjtcbiRwcmltYXJ5OiAkZ3JlZW47XG5cbiRsaW5rOiAkdHVycXVvaXNlO1xuXG5cbi8vIFVwZGF0ZSBzb21lIG9mIEJ1bG1hJ3MgY29tcG9uZW50IHZhcmlhYmxlc1xuXG4kY29udHJvbC1ib3JkZXItd2lkdGg6IDJweDtcbiRpbnB1dC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuJGlucHV0LXNoYWRvdzogbm9uZTtcblxuXG4vLyBTZXQgY3VzdG9tIGdsb2JhbCBzdHlsZXMgKHdpbGwgYmUgYXBwbGllZCB0byB3aG9sZSBhcHApXG5cbmh0bWwge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCB0b3AsICR0dXJxdW9pc2UsICRncmVlbik7XG59XG5cbmh0bWwsIGJvZHkge1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLmNlbnRlcmVkLWNvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5tb2RhbC1ib3gge1xuICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogNTgwcHg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIHBhZGRpbmc6IDM1cHg7XG59XG5cbi50aXRsZSB7XG4gICAgZm9udC1mYW1pbHk6ICdMYXRvJztcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xufVxuXG4ud2hpdGUtYm94IHtcbiAgICBwYWRkaW5nOiAzNXB4O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcblxuICAgIHdpZHRoOiAzNTBweDtcbiAgICBtYXgtd2lkdGg6IDM1MHB4O1xuICAgIFxufVxuLm1vZGFsLWJveHtcbiAgICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDU4MHB4O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBwYWRkaW5nOiAzNXB4O1xufVxuIiwiQGltcG9ydCAnLi4vLi4vLi4vbWFpbi1zdHlsZXMuc2Nzcyc7XG5cbi50YXNrLW1hbmFnZXItY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEwMDBweDtcbiAgICBtYXgtaGVpZ2h0OiA2ODBweDtcbn1cblxuLnNpZGViYXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIHdpZHRoOiAyNTBweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgIHBhZGRpbmc6IDQycHg7XG5cbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA4cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogOHB4O1xufVxuXG4udGFzay1saXN0LWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgcGFkZGluZzogNDJweDtcblxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA4cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDhweDtcblxuXG4gICAgLnRvcC1iYXIge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cbi5saXN0LW1lbnUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xuICAgIGZsZXgtZ3JvdzogMTsgXG5cbiAgICAubGlzdC1tZW51LWl0ZW0ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuXG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBjb2xvcjogIzVmNWY1ZjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGxpZ2h0O1xuICAgICAgICB9XG5cbiAgICAgICAgJi5pcy1hY3RpdmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NmZjhlZjtcbiAgICAgICAgICAgIGNvbG9yOiAkZGFyay1ncmVlbjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLnRhc2sge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcGFkZGluZzogMTVweCAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBcbiAgICAmOm5vdCguY29tcGxldGUpIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMnMgZWFzZSwgdHJhbnNmb3JtIDAuMnMgZWFzZTtcbiAgICBcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMCA1cHggI2VlZWVlZTtcblxuICAgICAgICAgICAgLnRhc2stYnV0dG9ucyB7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi5jb21wbGV0ZWQge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgIH1cblxuICAgICYuY29tcGxldGVkIC50YXNrLXRleHQge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgIH1cblxuXG4gICAgLnRhc2stdGV4dCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICB9XG5cbiAgICAudGFzay1idXR0b25zIHtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzLCB0cmFuc2Zvcm0gMC4ycztcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjg1KTtcbiAgICB9XG59XG5cbi5jaXJjbGUtYWRkLWJ1dHRvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMzVweDtcbiAgICByaWdodDogMzVweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIFxufVxuXG4uZW1wdHktc3RhdGUtdGV4dCB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGNvbG9yOiAjNzc3O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmNpcmNsZS1hZGQtYnV0dG9ue1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgIGJvdHRvbTogMzVweDtcbiAgIHJpZ2h0OiAzNXB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICB3aWR0aDogNTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAUUA,6BAAqH;IAClHA,YAAgB;IAAAA,iBAAI;;;;IAD8BA,oEAAkC;IACpFA,eAAgB;IAAhBA,mCAAgB;;;;;;;;;;;IAcrBA,+BAAwH;IAA3EA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAC5DA,yBAAG;IAAAA,YAAgB;IAAAA,iBAAI;;;;IADsCA,uEAA8C;IACxGA,eAAgB;IAAhBA,mCAAgB;;;ACdvC,OAAM,MAAOC,iBAAiB;EAK9BC,YAAoBC,WAAwB,EAAUC,KAAqB,EAAUC,MAAc;IAA/E,gBAAW,GAAXF,WAAW;IAAuB,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;EAAY;EAEvGC,QAAQ;IACJ,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CACxBD,MAAc,IAAI;MACnBE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MAChB,IAAI,CAACJ,WAAW,CAACQ,QAAQ,CAACJ,MAAM,CAAC,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAEI,KAAU,IAAI;QACpEH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;QACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;MACP,CAAC,CAAC;IACN,CAAC,CACV;IACH,IAAI,CAACT,WAAW,CAACU,QAAQ,EAAE,CAACL,SAAS,CAAEM,KAAU,IAAI;MACnD,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAC,WAAW,CAACC,IAAU;IACpB;IACA,IAAI,CAACb,WAAW,CAACc,QAAQ,CAACD,IAAI,CAAC,CAACR,SAAS,CAAC,MAAK;MAC7CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC;MACAM,IAAI,CAACE,SAAS,GAAG,CAACF,IAAI,CAACE,SAAS;IAClC,CAAC,CAAC;EACJ;;AA7BWjB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ9BvB,8BAA8B;MAKtBA,uBACF;MAAAA,iBAAK;MAELA,8BAAuB;MAEnBA,8DAEE;MAENA,iBAAM;MAELA,iCAAwE;MAAAA,0BAAU;MAAAA,iBAAS;MAIhGA,8BAAsD;MAEhDA,wBACF;MAAAA,iBAAK;MAEHA,oEAEQ;MAENA,kCAA4E;MAC1EA,2BAA0C;MAC5CA,iBAAS;;;MArBkCA,eAAQ;MAARA,mCAAQ;MAelBA,eAAQ;MAARA,mCAAQ","names":["i0","TaskViewComponent","constructor","taskService","route","router","ngOnInit","params","subscribe","console","log","getTasks","tasks","getLists","lists","onTaskClick","task","complete","completed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/suryaslash/Documents/GitHub/sad-01-2023-project-team_1/frontend/src/app/pages/task-view/task-view.component.html","/Users/suryaslash/Documents/GitHub/sad-01-2023-project-team_1/frontend/src/app/pages/task-view/task-view.component.ts"],"sourcesContent":["<div class=\"centered-content\">\n <div class=\"task-manager-container\">\n\n  <div class=\"sidebar  has-background-white\">\n   <h1 class=\"title has-text-primary\">\n        Lists\n      </h1>\n   \n      <div class=\"list-menu\">\n       \n          <a class=\"list-menu-item\" *ngFor=\"let list of lists\" [routerLink]=\"['/lists',list._id]\" routerLinkActive=\"is-active\">\n          <p>{{ list.title }}</p>\n        </a>\n\n      </div>\n\n       <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">+ New List</button>\n\n  </div>\n\n  <div class=\"task-list-container has-background-light\">\n  <h1 class=\"title has-text-primary\">\n        Tasks\n      </h1>\n      <!-- Task Elements -->\n        <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass] = \"{ 'completed' : task.completed }\">\n                    <p>{{ task.title }}</p>\n          </div>\n\n          <button routerLink=\"./new-task\" class=\"circle-add-button button is-primary\">\n            <img  src=\"../../../assets/plus-icon.svg\">\n          </button>\n  </div>\n\n </div>\n","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { List } from 'src/app/models/list.model';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\n\nlists: any;\ntasks: any;\n\nconstructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\n\nngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n      console.log(params);\n         this.taskService.getTasks(params['listId']).subscribe((tasks: any) => {\n          console.log(tasks);\n         this.tasks = tasks;\n                    })\n                }\n      )\n    this.taskService.getLists().subscribe((lists: any) => {\n      this.lists = lists;\n    })\n  }\n    \n  onTaskClick(task: Task) {\n    // we wanna set task to completed\n    this.taskService.complete(task).subscribe(() => {\n      console.log(\"Completed successfully\");\n      //task set to completed successfully\n      task.completed = !task.completed;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}