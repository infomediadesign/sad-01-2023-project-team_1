{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/lists\", a1];\n};\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const list_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r3._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r3.title);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"completed\": a0\n  };\n};\nfunction TaskViewComponent_div_10_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_10_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const task_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onTaskClick(task_r6));\n    });\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, task_r6.completed));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r6.title);\n  }\n}\nfunction TaskViewComponent_div_10_h3_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 15);\n    i0.ɵɵtext(1, \" There are no tasks here! Please click the add button to create a new task.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskViewComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 3);\n    i0.ɵɵtext(2, \" Tasks \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TaskViewComponent_div_10_div_3_Template, 3, 4, \"div\", 10);\n    i0.ɵɵtemplate(4, TaskViewComponent_div_10_h3_4_Template, 2, 0, \"h3\", 11);\n    i0.ɵɵelementStart(5, \"button\", 12);\n    i0.ɵɵelement(6, \"img\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.tasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tasks.length === 0);\n  }\n}\nfunction TaskViewComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 15);\n    i0.ɵɵtext(2, \" Please select a list from the sidebar\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TaskViewComponent {\n  constructor(taskService, route, router) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['listId']) {\n        console.log(params);\n        this.taskService.getTasks(params['listId']).subscribe(tasks => {\n          console.log(tasks);\n          this.tasks = tasks;\n        });\n      } else {\n        this.tasks = undefined;\n      }\n    });\n    this.taskService.getLists().subscribe(lists => {\n      this.lists = lists;\n    });\n  }\n  onTaskClick(task) {\n    // we wanna set task to completed\n    this.taskService.complete(task).subscribe(() => {\n      console.log(\"Completed successfully\");\n      //task set to completed successfully\n      task.completed = !task.completed;\n    });\n  }\n}\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [4, \"ngIf\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [\"class\", \"task\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"empty-state-text\", 4, \"ngIf\"], [\"routerLink\", \"./new-task\", 1, \"circle-add-button\", \"button\", \"is-primary\"], [\"src\", \"../../../assets/plus-icon.svg\"], [1, \"task\", 3, \"ngClass\", \"click\"], [1, \"empty-state-text\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"+ New List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵtemplate(10, TaskViewComponent_div_10_Template, 7, 2, \"div\", 8);\n      i0.ɵɵtemplate(11, TaskViewComponent_div_11_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"@import url(https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700);html[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right top, #44ddd0, #09bcf2);\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.centered-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 24px;\\n  text-transform: uppercase;\\n  letter-spacing: 2px;\\n}\\n\\n.white-box[_ngcontent-%COMP%] {\\n  padding: 35px;\\n  background: white;\\n  border-radius: 5px;\\n  width: 350px;\\n  max-width: 350px;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.task-manager-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 1000px;\\n  max-height: 680px;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n  background: white;\\n  padding: 42px;\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n\\n.task-list-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  padding: 42px;\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  display: flex;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n  margin: 0;\\n}\\n\\n.list-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 15px;\\n  flex-grow: 1;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  width: 100%;\\n  color: #5f5f5f;\\n  margin-bottom: 5px;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover {\\n  background: #f8f8f8;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%] {\\n  background-color: #cff8ef;\\n  color: rgb(0, 100, 80);\\n}\\n\\n.task[_ngcontent-%COMP%] {\\n  display: flex;\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  align-items: center;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete) {\\n  cursor: pointer;\\n  transition: box-shadow 0.2s ease, transform 0.2s ease;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):active {\\n  transform: scale(0.95);\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover {\\n  box-shadow: 0 0 0 5px #eeeeee;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover   .task-buttons[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  transform: scale(1);\\n}\\n.task.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task.completed[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-grow: 1;\\n}\\n.task[_ngcontent-%COMP%]   .task-buttons[_ngcontent-%COMP%] {\\n  transition: opacity 0.2s, transform 0.2s;\\n  opacity: 0;\\n  transform: scale(0.85);\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluLXN0eWxlcy5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9wYWdlcy90YXNrLXZpZXcvdGFzay12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCQTtFQUNJLDJEQUFBO0FDM0JKOztBRDhCQTtFQUNJLFlBQUE7QUMzQko7O0FEOEJBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQzNCSjs7QUQ4QkE7RUFDSSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FDM0JKOztBRDhCQTtFQUNJLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0VBQ0EsbUJBQUE7QUMzQko7O0FEOEJBO0VBQ0ksYUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFFQSxZQUFBO0VBQ0EsZ0JBQUE7QUM1Qko7O0FEK0JBO0VBQ0ksaUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtBQzVCSjs7QUE5Q0E7RUFDSSxhQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0FBaURKOztBQTlDQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUVBLFlBQUE7RUFDQSxpQkFBQTtFQUVBLGFBQUE7RUFFQSwyQkFBQTtFQUNBLDhCQUFBO0FBOENKOztBQTNDQTtFQUNJLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFFQSw0QkFBQTtFQUNBLCtCQUFBO0FBNkNKO0FBMUNJO0VBQ0ksbUJBQUE7RUFDQSxhQUFBO0FBNENSO0FBM0NRO0VBQ0ksWUFBQTtFQUNBLFNBQUE7QUE2Q1o7O0FBdkNBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FBMENKO0FBeENJO0VBQ0ksYUFBQTtFQUVBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUVBLFdBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7QUF3Q1I7QUF0Q1E7RUFDSSxtQkRyREo7QUM2RlI7QUFyQ1E7RUFDSSx5QkFBQTtFQUNBLHNCRDVEQztBQ21HYjs7QUFsQ0E7RUFDSSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFFQSxtQkFBQTtBQW9DSjtBQWxDSTtFQUNJLGVBQUE7RUFDQSxxREFBQTtBQW9DUjtBQWxDUTtFQUNJLHNCQUFBO0FBb0NaO0FBakNRO0VBQ0ksNkJBQUE7QUFtQ1o7QUFqQ1k7RUFDSSxVQUFBO0VBQ0EsbUJBQUE7QUFtQ2hCO0FBOUJJO0VBQ0ksNkJBQUE7RUFDQSxZQUFBO0FBZ0NSO0FBN0JJO0VBQ0ksNkJBQUE7RUFDQSxZQUFBO0FBK0JSO0FBM0JJO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUE2QlI7QUExQkk7RUFDSSx3Q0FBQTtFQUNBLFVBQUE7RUFDQSxzQkFBQTtBQTRCUjs7QUF4QkE7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQTJCSjs7QUF2QkE7RUFDSSxlQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBMEJKOztBQXZCQTtFQUNJLGtCQUFBO0VBQ0QsWUFBQTtFQUNBLFdBQUE7RUFDQyxZQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBMEJKOztBQXRCQTtFQUNJLGVBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUF5QkoiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGlzIHdoZXJlIHdlIHB1dCBnbG9iYWwgc3R5bGVzIGFuZCBjaGFuZ2UgdmFyaWFibGUgdmFsdWVzXG5cbi8vIEltcG9ydCBGb250cyAoTGF0byBhbmQgTnVuaXRvKVxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1MYXRvOjQwMCw3MDB8TnVuaXRvOjQwMCw3MDAnKTtcblxuJHR1cnF1b2lzZTogIzQ0ZGRkMDtcbiRncmVlbjogIzA5YmNmMjtcbiRsaWdodC1ncmVlbjogIzQ1ZjY5ZTsgXG4kZGFyay1ncmVlbjogcmdiKDAsIDEwMCwgODApO1xuXG4kbGlnaHQ6ICNmOGY4Zjg7XG5cblxuLy8gVXBkYXRlIEJ1bG1hJ3MgZ2xvYmFsIHZhcmlhYmxlc1xuJGZhbWlseS1zYW5zLXNlcmlmOiBcIk51bml0b1wiLCBzYW5zLXNlcmlmO1xuJHByaW1hcnk6ICRncmVlbjtcblxuJGxpbms6ICR0dXJxdW9pc2U7XG5cblxuLy8gVXBkYXRlIHNvbWUgb2YgQnVsbWEncyBjb21wb25lbnQgdmFyaWFibGVzXG5cbiRjb250cm9sLWJvcmRlci13aWR0aDogMnB4O1xuJGlucHV0LWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4kaW5wdXQtc2hhZG93OiBub25lO1xuXG5cbi8vIFNldCBjdXN0b20gZ2xvYmFsIHN0eWxlcyAod2lsbCBiZSBhcHBsaWVkIHRvIHdob2xlIGFwcClcblxuaHRtbCB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IHRvcCwgJHR1cnF1b2lzZSwgJGdyZWVuKTtcbn1cblxuaHRtbCwgYm9keSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uY2VudGVyZWQtY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLm1vZGFsLWJveCB7XG4gICAgbWluLWhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA1ODBweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogMzVweDtcbn1cblxuLnRpdGxlIHtcbiAgICBmb250LWZhbWlseTogJ0xhdG8nO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG59XG5cbi53aGl0ZS1ib3gge1xuICAgIHBhZGRpbmc6IDM1cHg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuXG4gICAgd2lkdGg6IDM1MHB4O1xuICAgIG1heC13aWR0aDogMzUwcHg7XG4gICAgXG59XG4ubW9kYWwtYm94e1xuICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogNTgwcHg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIHBhZGRpbmc6IDM1cHg7XG59XG4iLCJAaW1wb3J0ICcuLi8uLi8uLi9tYWluLXN0eWxlcy5zY3NzJztcblxuLnRhc2stbWFuYWdlci1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwMHB4O1xuICAgIG1heC1oZWlnaHQ6IDY4MHB4O1xufVxuXG4uc2lkZWJhciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgcGFkZGluZzogNDJweDtcblxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDhweDtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA4cHg7XG59XG5cbi50YXNrLWxpc3QtY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBwYWRkaW5nOiA0MnB4O1xuXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDhweDtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogOHB4O1xuXG5cbiAgICAudG9wLWJhciB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuLmxpc3QtbWVudSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbi10b3A6IDE1cHg7XG4gICAgZmxleC1ncm93OiAxOyBcblxuICAgIC5saXN0LW1lbnUtaXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZzogMTBweCAxNXB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG5cbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGNvbG9yOiAjNWY1ZjVmO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkbGlnaHQ7XG4gICAgICAgIH1cblxuICAgICAgICAmLmlzLWFjdGl2ZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZmOGVmO1xuICAgICAgICAgICAgY29sb3I6ICRkYXJrLWdyZWVuO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4udGFzayB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG5cbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIFxuICAgICY6bm90KC5jb21wbGV0ZSkge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4ycyBlYXNlLCB0cmFuc2Zvcm0gMC4ycyBlYXNlO1xuICAgIFxuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDVweCAjZWVlZWVlO1xuXG4gICAgICAgICAgICAudGFzay1idXR0b25zIHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLmNvbXBsZXRlZCB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xuICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgfVxuXG4gICAgJi5jb21wbGV0ZWQgLnRhc2stdGV4dCB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xuICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgfVxuXG5cbiAgICAudGFzay10ZXh0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1ncm93OiAxO1xuICAgIH1cblxuICAgIC50YXNrLWJ1dHRvbnMge1xuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMsIHRyYW5zZm9ybSAwLjJzO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuODUpO1xuICAgIH1cbn1cblxuLmNpcmNsZS1hZGQtYnV0dG9uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAzNXB4O1xuICAgIHJpZ2h0OiAzNXB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICB3aWR0aDogNTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgXG59XG5cbi5lbXB0eS1zdGF0ZS10ZXh0IHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgY29sb3I6ICM3Nzc7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2lyY2xlLWFkZC1idXR0b257XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgYm90dG9tOiAzNXB4O1xuICAgcmlnaHQ6IDM1cHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcblxufVxuXG4uZW1wdHktc3RhdGUtdGV4dHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgY29sb3I6ICM3Nzc7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAUUA,4BAAqH;IAClHA,YAAgB;IAAAA,iBAAI;;;;IAD8BA,oEAAkC;IACpFA,eAAgB;IAAhBA,mCAAgB;;;;;;;;;;;IAerBA,+BAAwH;IAA3EA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAC5DA,yBAAG;IAAAA,YAAgB;IAAAA,iBAAI;;;;IADsCA,uEAA8C;IACxGA,eAAgB;IAAhBA,mCAAgB;;;;;IAG7BA,8BAAwD;IAACA,2FAA0E;IAAAA,iBAAK;;;;;IAT9IA,2BAAmB;IAEfA,uBACF;IAAAA,iBAAK;IAEHA,0EAEQ;IAENA,wEAAwI;IAExIA,kCAA4E;IAC1EA,0BAA0C;IAC5CA,iBAAS;;;;IARwBA,eAAQ;IAARA,sCAAQ;IAIXA,eAAwB;IAAxBA,gDAAwB;;;;;IAO5DA,2BAAoB;IACYA,sDAAqC;IAAAA,iBAAK;;;AC1B9E,OAAM,MAAOC,iBAAiB;EAK9BC,YAAoBC,WAAwB,EAAUC,KAAqB,EAAUC,MAAc;IAA/E,gBAAW,GAAXF,WAAW;IAAuB,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;EAAY;EAEvGC,QAAQ;IACJ,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CACxBD,MAAc,IAAI;MACjB,IAAIA,MAAM,CAAC,QAAQ,CAAC,EAAC;QACvBE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;QAChB,IAAI,CAACJ,WAAW,CAACQ,QAAQ,CAACJ,MAAM,CAAC,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAEI,KAAU,IAAI;UACpEH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;UACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;QACP,CAAC,CAAC;OACL,MACG;QACF,IAAI,CAACA,KAAK,GAAGC,SAAS;;IAE1B,CAAC,CACR;IACH,IAAI,CAACV,WAAW,CAACW,QAAQ,EAAE,CAACN,SAAS,CAAEO,KAAU,IAAI;MACnD,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAC,WAAW,CAACC,IAAU;IACpB;IACA,IAAI,CAACd,WAAW,CAACe,QAAQ,CAACD,IAAI,CAAC,CAACT,SAAS,CAAC,MAAK;MAC7CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC;MACAO,IAAI,CAACE,SAAS,GAAG,CAACF,IAAI,CAACE,SAAS;IAClC,CAAC,CAAC;EACJ;;AAlCWlB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ9BxB,8BAA8B;MAKtBA,uBACF;MAAAA,iBAAK;MAELA,8BAAuB;MAEnBA,8DAEE;MAENA,iBAAM;MAELA,iCAAwE;MAAAA,0BAAU;MAAAA,iBAAS;MAIhGA,8BAAsD;MACpDA,oEAcM;MAENA,oEAEM;MAERA,iBAAM;;;MA/B6CA,eAAQ;MAARA,mCAAQ;MAWnDA,eAAW;MAAXA,gCAAW;MAgBXA,eAAY;MAAZA,iCAAY","names":["i0","TaskViewComponent","constructor","taskService","route","router","ngOnInit","params","subscribe","console","log","getTasks","tasks","undefined","getLists","lists","onTaskClick","task","complete","completed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/suryaslash/Documents/GitHub/sad-01-2023-project-team_1/frontend/src/app/pages/task-view/task-view.component.html","/Users/suryaslash/Documents/GitHub/sad-01-2023-project-team_1/frontend/src/app/pages/task-view/task-view.component.ts"],"sourcesContent":["<div class=\"centered-content\">\n <div class=\"task-manager-container\">\n\n  <div class=\"sidebar  has-background-white\">\n   <h1 class=\"title has-text-primary\">\n        Lists\n      </h1>\n   \n      <div class=\"list-menu\">\n       \n          <a class=\"list-menu-item\" *ngFor=\"let list of lists\" [routerLink]=\"['/lists',list._id]\" routerLinkActive=\"is-active\">\n          <p>{{ list.title }}</p>\n        </a>\n\n      </div>\n\n       <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">+ New List</button>\n\n  </div>\n\n  <div class=\"task-list-container has-background-light\">\n    <div *ngIf=\"tasks\">\n      <h1 class=\"title has-text-primary\">\n        Tasks\n      </h1>\n      <!-- Task Elements -->\n        <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass] = \"{ 'completed' : task.completed }\">\n                    <p>{{ task.title }}</p>\n          </div>\n\n          <h3 class=\"empty-state-text\" *ngIf=\"tasks.length === 0\"> There are no tasks here! Please click the add button to create a new task.</h3>\n\n          <button routerLink=\"./new-task\" class=\"circle-add-button button is-primary\">\n            <img  src=\"../../../assets/plus-icon.svg\">\n          </button>\n    </div>\n\n    <div *ngIf=\"!tasks\">\n      <h3 class=\"empty-state-text\"> Please select a list from the sidebar</h3>\n    </div>\n  \n  </div>\n\n </div>\n","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { List } from 'src/app/models/list.model';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\n\nlists: any;\ntasks: any;\n\nconstructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\n\nngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        if (params['listId']){\n      console.log(params);\n         this.taskService.getTasks(params['listId']).subscribe((tasks: any) => {\n          console.log(tasks);\n         this.tasks = tasks;\n                    })\n                }\n                else{\n                  this.tasks = undefined;\n                }\n              }\n      )\n    this.taskService.getLists().subscribe((lists: any) => {\n      this.lists = lists;\n    })\n  }\n    \n  onTaskClick(task: Task) {\n    // we wanna set task to completed\n    this.taskService.complete(task).subscribe(() => {\n      console.log(\"Completed successfully\");\n      //task set to completed successfully\n      task.completed = !task.completed;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}